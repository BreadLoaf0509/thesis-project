<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="/css/style.css" />
  <link rel="stylesheet" href="/css/user/user-extract.css" />
  <title>MedExtract</title>
</head>

<body>
  <nav class="user-navbar">
    <div class="container">
      <div class="logo">
        <h1><a href="#">MedExtract</a></h1>
      </div>

      <ul class="nav">
        <li><a href="#">Extract</a></li>
        <li><a href="#">Search</a></li>
        <li><a href="#">Settings</a></li>
        <li><a href="/guest-home">Log Out</a></li>
      </ul>
    </div>
  </nav>

  <main class="app">

    <div class="header">
      <h2>Upload Images</h2>
      <div class="server-message"></div>
    </div>

    <div class="input-div">
      <p>Drag and Drop Images or <span class="browse">Browse</span></p>
      <input type="file" class="file" multiple="multiple" accept="image/png, image/jpeg, image/jpg" />
    </div>

    <form id="saved-form">
      <div class="header">
        <h3>Saved in Server</h3>
        <button type="submit">Delete</button>
      </div>

      <div class="saved-div"></div>
    </form>

    <form id="queued-form">
      <div class="header">
        <h3>Images Preview</h3>
        <button type="submit">Upload</button>
      </div>

      <div class="queued-div"></div>
    </form>
  </main>

  <footer class="footer">
    <div class="container">
      <div class="f-1">
        <h2>MedExtract</h2>
        <p>
          Lorem ipsum dolor sit amet consectetur adipisicing elit. Adipisci,
          id aspernatur itaque cumque vitae odit sint eligendi nam libero
          voluptate magni aperiam, veniam ullam tenetur quidem nostrum enim
          eos a.
        </p>
      </div>

      <div class="f-2">
        <div>
          <h2>Links</h2>
          <ul class="nav">
            <li><a href="#">Extract</a></li>
            <li><a href="#">Search</a></li>
            <li><a href="#">Settings</a></li>
            <li><a href="#">Log Out</a></li>
          </ul>
        </div>
      </div>

      <div class="f-3">
        <h2>Contacts</h2>
        <div class="contacts">
          <div>
            <img src="http://localhost:3000/flaticons/location.png" /> &nbsp;
            <p>
              University of The East Caloocan, 105 Samson Rd, Caloocan, Metro
              Manila
            </p>
          </div>
          <div>
            <img src="http://localhost:3000/flaticons/email.png" /> &nbsp;
            <p>nogot.markvincent@ue.edu.ph</p>
          </div>
          <div>
            <img src="http://localhost:3000/flaticons/call.png" /> &nbsp;
            <p>09991624156</p>
          </div>
        </div>
      </div>
    </div>
  </footer>

  <script>
    let queuedImagesArray = [];
    savedForm = document.querySelector("#saved-form");
    queuedForm = document.querySelector("#queued-form");
    savedDiv = document.querySelector(".saved-div");
    queuedDiv = document.querySelector(".queued-div");
    inputDiv = document.querySelector(".input-div");
    input = document.querySelector(".input-div input");
    serverMessage = document.querySelector(".server-message");
    savedImages = JSON.parse('<%- JSON.stringify(images) %>'); // new
    deleteImages = [];

    // SAVED IN SERVER IMAGES

    if(savedImages) displayedSavedImages() // new

    function displayedSavedImages() { // new
      let images = "";
      savedImages.forEach((image, index) => {
        images += `<div class="image">
                   <img src="http://localhost:3000/uploads/${image}" alt="image">
                   <span onclick="deleteSavedImage(${index})">&times;</span>
                   </div>`
      })
      savedDiv.innerHTML = images;
    }

    function deleteSavedImage(index){ // new 
      deleteImages.push(savedImages[index]);
      savedImages.splice(index, 1);
      displayedSavedImages();
    }

    savedForm.addEventListener("submit", (e) => { // new
      e.preventDefault();
      deleteImagesFromServer();
    });

    function deleteImagesFromServer(){ // new
     fetch("delete", {
        method: "PUT",
        headers: {
          "Accept": "application/json, text/plain, */*",
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ deleteImages})
      })
      .then(response => {
        if(response.status !== 200) throw Error(response.statusText)
        deleteImages = []
        serverMessage.innerHTML = response.statusText
        serverMessage.style.cssText = "background-color: #D4EDDA; color: #1B5E20;"
      })

      .catch(error => {
        serverMessage.innerHTML = error
        serverMessage.style.cssText = "background-color: #F8D7DA; color: #B71C1C;"
      });
    }

    // QUEUED IN FRONTEND IMAGES

    input.addEventListener("change", () => {
      const files = input.files;
      for (let i = 0; i < files.length; i++) {
        queuedImagesArray.push(files[i]);
      }
      queuedForm.reset();
      displayQueuedImages();
    });

    inputDiv.addEventListener("drop", (e) => {
      e.preventDefault();
      const files = e.dataTransfer.files;
      for (let i = 0; i < files.length; i++) {
        if (!files[i].type.match("image")) continue;

        if (queuedImagesArray.every(image => image.name !== files[i].name))
          queuedImagesArray.push(files[i]);
      }
      displayQueuedImages();
    });

    function displayQueuedImages() {
      let images = "";
      queuedImagesArray.forEach((image, index) => {
        images += `<div class="image">
                   <img src="${URL.createObjectURL(image)}" alt="image">
                   <span onclick="deleteQueuedImage(${index})">&times;</span>
                   </div>`
      })
      queuedDiv.innerHTML = images;
    }

    function deleteQueuedImage(index) {
      queuedImagesArray.splice(index, 1);
      displayQueuedImages();
     }

    queuedForm.addEventListener("submit", (e) => {
      e.preventDefault();
      sendQueuedImagesToServer();
    })

    function sendQueuedImagesToServer(){
      const formData = new FormData(queuedForm);

      queuedImagesArray.forEach((image, index) => {
        formData.append(`file[${index}]`, image)
      })

      fetch("upload", {method: "POST", body : formData})

      .then(response => {
        if(response.status !== 200) throw Error(response.statusText)
        location.reload()
      })

      .catch(error => {
        serverMessage.innerHTML = error
        serverMessage.style.cssText = "background-color: #F8D7DA; color: #B71C1C;"
      });
    }

  </script>
</body>

</html>